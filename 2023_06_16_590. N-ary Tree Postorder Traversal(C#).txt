/*
// Definition for a Node.
public class Node {
    public int val;
    public IList<Node> children;

    public Node() {}

    public Node(int _val) {
        val = _val;
    }

    public Node(int _val, IList<Node> _children) {
        val = _val;
        children = _children;
    }
}
*/

public class Solution 
{
    IList<int> result = new List<int>();
    public IList<int> Postorder(Node root) 
    {
        Traverse(root);
        return result;
    }
    private void Traverse(Node node)
    {
        if (node == null)
            return;
        
        foreach (Node child in node.children)
        {
            Postorder(child);
        }
        
        result.Add(node.val);
    }
}