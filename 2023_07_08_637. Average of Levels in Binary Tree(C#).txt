/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
public class Solution 
{
    public IList<double> AverageOfLevels(TreeNode root) 
    {
        List<double> result = new();

        if(root is null) return result;

        Queue<TreeNode> queue = new();
        queue.Enqueue(root);
        
        double levelSum =0;
        while(queue.Any())
        {
            levelSum =0;
            int qLength = queue.Count;
            for(int i=0; i< qLength; i++)
            {
                var currNode = queue.Dequeue();
                levelSum += currNode.val;
                if(currNode.left is not null)
                    queue.Enqueue(currNode.left);
                if(currNode.right is not null)
                    queue.Enqueue(currNode.right);
            }
            double levelAvg = levelSum/ qLength;
            result.Add(levelAvg);
        }
        return result;
    }
}