public class Solution 
{
    public string[] FindWords(string[] words) 
    {
       var result = new List<string>();
        var row1 = new HashSet<char>() { 'q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p', 'Q', 'W', 'E', 'R', 'T', 'Y', 'U', 'I', 'O', 'P' };
        var row2 = new HashSet<char>() { 'a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'A', 'S', 'D', 'F', 'G', 'H', 'J', 'K', 'L' };
        var row3 = new HashSet<char>() { 'z', 'x', 'c', 'v', 'b', 'n', 'm', 'Z', 'X', 'C', 'V', 'B', 'N', 'M' };
        foreach (var word in words)
        {
            var letters = word.ToHashSet<char>();
            if(letters.IsSubsetOf(row1)||letters.IsSubsetOf(row2)||letters.IsSubsetOf(row3))
            {
                result.Add(word);   
            }
        }
        return result.ToArray(); 
    }
}